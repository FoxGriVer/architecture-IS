//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AIS_lab5.EnergyUnitService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.webserviceX.NET/", ConfigurationName="EnergyUnitService.EnergyUnitSoap")]
    public interface EnergyUnitSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.webserviceX.NET/ChangeEnergyUnit", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        double ChangeEnergyUnit(double EnergyValue, AIS_lab5.EnergyUnitService.Energys fromEnergyUnit, AIS_lab5.EnergyUnitService.Energys toEnergyUnit);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.webserviceX.NET/ChangeEnergyUnit", ReplyAction="*")]
        System.Threading.Tasks.Task<double> ChangeEnergyUnitAsync(double EnergyValue, AIS_lab5.EnergyUnitService.Energys fromEnergyUnit, AIS_lab5.EnergyUnitService.Energys toEnergyUnit);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.webserviceX.NET/")]
    public enum Energys {
        
        /// <remarks/>
        attojoule,
        
        /// <remarks/>
        BoardofTradeunit,
        
        /// <remarks/>
        Btu,
        
        /// <remarks/>
        Btuthermochemical,
        
        /// <remarks/>
        calorie,
        
        /// <remarks/>
        calorie15C,
        
        /// <remarks/>
        caloriethermochemical,
        
        /// <remarks/>
        celsiusheatunit,
        
        /// <remarks/>
        centijoule,
        
        /// <remarks/>
        chevalvapeurheure,
        
        /// <remarks/>
        decijoule,
        
        /// <remarks/>
        dekajoule,
        
        /// <remarks/>
        dekawatthour,
        
        /// <remarks/>
        dekatherm,
        
        /// <remarks/>
        electronvolt,
        
        /// <remarks/>
        erg,
        
        /// <remarks/>
        exajoule,
        
        /// <remarks/>
        exawatthour,
        
        /// <remarks/>
        femtojoule,
        
        /// <remarks/>
        footpound,
        
        /// <remarks/>
        footpoundal,
        
        /// <remarks/>
        gallonofautomotivegasoline,
        
        /// <remarks/>
        gallonofaviationgasoline,
        
        /// <remarks/>
        gallonofdieseloil,
        
        /// <remarks/>
        gallonofdistilate2fueloil,
        
        /// <remarks/>
        gallonofkerosenetypejetfuel,
        
        /// <remarks/>
        gallonofnaphthatypejetfuel,
        
        /// <remarks/>
        gallonofkerosene,
        
        /// <remarks/>
        gallonofresidualfueloil,
        
        /// <remarks/>
        gigaelectronvolt,
        
        /// <remarks/>
        gigajoule,
        
        /// <remarks/>
        gigawatthour,
        
        /// <remarks/>
        gramcalorie,
        
        /// <remarks/>
        hartree,
        
        /// <remarks/>
        hectojoule,
        
        /// <remarks/>
        hectowatthour,
        
        /// <remarks/>
        horseEnergyhour,
        
        /// <remarks/>
        hundredcubicfootofnaturalgas,
        
        /// <remarks/>
        inchounce,
        
        /// <remarks/>
        inchpound,
        
        /// <remarks/>
        joule,
        
        /// <remarks/>
        kilocalorie1,
        
        /// <remarks/>
        kilocalorieIT,
        
        /// <remarks/>
        kilocaloriethermochemical,
        
        /// <remarks/>
        kiloelectronvolt,
        
        /// <remarks/>
        kilogramcalorie,
        
        /// <remarks/>
        kilogrammeter,
        
        /// <remarks/>
        kilojoule,
        
        /// <remarks/>
        kilopondmeter,
        
        /// <remarks/>
        kiloton,
        
        /// <remarks/>
        kilowatthour,
        
        /// <remarks/>
        literatmosphere,
        
        /// <remarks/>
        megaelectronvolt,
        
        /// <remarks/>
        megajoule,
        
        /// <remarks/>
        megalerg,
        
        /// <remarks/>
        megaton,
        
        /// <remarks/>
        megawatthour,
        
        /// <remarks/>
        meterkilogram,
        
        /// <remarks/>
        microjoule,
        
        /// <remarks/>
        millijoule,
        
        /// <remarks/>
        myriawatthour,
        
        /// <remarks/>
        nanojoule,
        
        /// <remarks/>
        newtonmeter,
        
        /// <remarks/>
        petajoule,
        
        /// <remarks/>
        petawatthour,
        
        /// <remarks/>
        pferdestärkenstunde,
        
        /// <remarks/>
        picojoule,
        
        /// <remarks/>
        Qunit,
        
        /// <remarks/>
        quad,
        
        /// <remarks/>
        teraelectronvolt,
        
        /// <remarks/>
        terajoule,
        
        /// <remarks/>
        terawatthour,
        
        /// <remarks/>
        thermEurope,
        
        /// <remarks/>
        thermUS,
        
        /// <remarks/>
        thermie,
        
        /// <remarks/>
        ton,
        
        /// <remarks/>
        tonneofcoalequivalent,
        
        /// <remarks/>
        tonneofoilequivalent,
        
        /// <remarks/>
        watthour,
        
        /// <remarks/>
        wattsecond,
        
        /// <remarks/>
        yoctojoule,
        
        /// <remarks/>
        yottajoule,
        
        /// <remarks/>
        yottawatthour,
        
        /// <remarks/>
        zeptojoule,
        
        /// <remarks/>
        zettajoule,
        
        /// <remarks/>
        zettawatthour,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EnergyUnitSoapChannel : AIS_lab5.EnergyUnitService.EnergyUnitSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnergyUnitSoapClient : System.ServiceModel.ClientBase<AIS_lab5.EnergyUnitService.EnergyUnitSoap>, AIS_lab5.EnergyUnitService.EnergyUnitSoap {
        
        public EnergyUnitSoapClient() {
        }
        
        public EnergyUnitSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnergyUnitSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnergyUnitSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnergyUnitSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double ChangeEnergyUnit(double EnergyValue, AIS_lab5.EnergyUnitService.Energys fromEnergyUnit, AIS_lab5.EnergyUnitService.Energys toEnergyUnit) {
            return base.Channel.ChangeEnergyUnit(EnergyValue, fromEnergyUnit, toEnergyUnit);
        }
        
        public System.Threading.Tasks.Task<double> ChangeEnergyUnitAsync(double EnergyValue, AIS_lab5.EnergyUnitService.Energys fromEnergyUnit, AIS_lab5.EnergyUnitService.Energys toEnergyUnit) {
            return base.Channel.ChangeEnergyUnitAsync(EnergyValue, fromEnergyUnit, toEnergyUnit);
        }
    }
}
